-- Autofarm Core
local debounce = false
local autofarm = false -- Set to true to turn on the auto farm, false to stop it

-- Setting UI
local ui = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local win = ui:CreateWindow({
    Name = "RPG Champions",
    LoadingTitle = "RPG Champions Exploit",
    LoadingSubtitle = "...",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "RCEX"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD.
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "RPG Champions",
       Subtitle = "Key System",
       Note = "...",
       FileName = "SiriusKey",
       SaveKey = true,
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = "Hello"
    }
 })

-- Creating elements
local rcex = win:CreateTab("Cheats", 4483362458) -- Title, Image

-- Autofarm
local Autofarm = rcex:CreateToggle({
   Name = "Autofarm",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
		ui:Notify({
		Title = "Warning",
		Content = "Auto Farms Nearest Enemy.",
		Duration = 6.5,
		Image = 4483362458,
		Actions = { -- Notification Buttons
			Ignore = {
				Name = "Y",
				Callback = function()
				print("Warning Accepted")
			end
				},
			},
		})

		autofarm = Value
   end,
})

-- NoClip
local NoClip = rcex:CreateButton({
   Name = "NoClip",
   Callback = function()
		nc()
   end,
})

-- Speed
local speed = rcex:CreateSlider({
   Name = "Speed Slider",
   Range = {0, 100},
   Increment = 10,
   Suffix = "Speed",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
		local player = game.Players.LocalPlayer

		if player.Character then
			player.Character.Humanoid.WalkSpeed = Value
		end
   end,
})

-- Jump
local speed = rcex:CreateSlider({
   Name = "Jump Slider",
   Range = {0, 100},
   Increment = 10,
   Suffix = "Speed",
   CurrentValue = 10,
   Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
		local player = game.Players.LocalPlayer

		if player.Character then
			player.Character.Humanoid.JumpPower = Value
		end
   end,
})

-- Credits Tab
local credits = win:CreateTab("Credits", 4483362458)

local devs = credits:CreateLabel("Abdullah : Alacszim")
local contact = credits:CreateLabel("Contact at AbduIIah#3581 to report Bugs")

-- NoClip Functions
function nc()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("BasePart") then
            v.CanCollide = false
            v.Velocity = Vector3.new(0, 0, 0)
        end
    end
end

-- Auto Farm Funcitons
function getClosestMob()
    local closestDistance = math.huge
    local closestMob

    for _, mob in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
        if mob.Humanoid.Health > 0 and game.Players.LocalPlayer.Character:WaitForChild('Humanoid').Health > 0 then
            local distance = (mob.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

            if distance < closestDistance then
                closestDistance = distance
                closestMob = mob
            end
        end
    end

    return closestMob
end

task.spawn(function()
    while true do
        task.wait()
		
        if not autofarm then
            continue
        end

        local target = getClosestMob()
        if target ~= nil then
            nc()
            local humanoid = game.Players.LocalPlayer.Character:WaitForChild('Humanoid')

            humanoid:MoveTo(target.HumanoidRootPart.Position)
            wait(1)

            game:GetService("Players").LocalPlayer.Character.WeaponEvent:FireServer('swing')
        end
    end
end)
    

-- Disable enemies when autofarm is turned on
local mt = getrawmetatable(game)
local old = mt.__namecall

setreadonly(mt, false)
mt.__namecall = newcclosure(function(self, ...)
	local args = {...}

	if autofarm and getnamecallmethod() == 'InvokeServer' and self.Name == 'actionFunctions' and args[1] == "activateEnemy" then
		args[1] = "Break Mob"
	end

	return old(self, unpack(args))
end)
